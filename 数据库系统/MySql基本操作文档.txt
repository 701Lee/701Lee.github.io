数据库基本操作
	我们常用的数据库是关系型数据库，所谓关系型数据库就是一种使用表格结构来存储和管理数据的数据库系统。
常见的关系型数据库包括MySql、Oracle、SQL Server等
	这里的关系就是关系型数据库中的每一张表，是由行(元组)和列(属性)组成的二维表的结构。
另外，一个数据库中会有多个关系，也就是多张表，而一个数据库管理系统中也会管理多个数据库。

一、数据库的创建，删除

1、数据库的创建
create database DBname;
2.数据库的删除
drop database DBname;
3.查看当前数据库管理系统下的所有数据库
show databases;
4.使用特定的数据库
use DB_name;

定义一张表，就需要说明它有那些列，每列是什么类型的数据。
一.基本表的定义
1.表的创建 create
create table Tname(id int, name varchar(50));
但光有列名还不够。比如某些属性字段不能为空，某些字段值必须唯一，这就会涉及到表中的约束条件。
常见的约束有主键约束，唯一约束，非空约束,默认约束等
-1.1主键约束 primary key
create table Tname(
id int primary key, 
name varchar(50)
);
=
create table Tname(
id int, 
name varchar(50), 
primary key(id));

-1.2唯一约束 unique
create table Tname(
id int primary key,
name varchar(50) unique
);
=
create table Tname (
id int primary key,
name varchar(50),
unique(name)
);
-1.3 非空约束 not null
主键默认是非空的
create table Tname(
id int primary key,
name varchar(50) not null
);
-1.4默认约束 default
default 约束在 insert into 语句没有提供一个特定的值的时候，为列提供一个默认值。
例如，下面的 sql 语句创建一个新的表 company，并增加了五列。
在这里，salary 列默认设置为 5000.00。所以当 INSERT INTO 语句没有为该列提供值时，
该列将被设置为 5000.00。
create table COMPANY(
   id int primary key     not null,
   name           text    not null,
   age            int     not null,
   address        char(50),
   salary         real    default 50000.00
);
2.表的结构删除 drop
drop table Tname;

3. 表的数据的删除 delete
- 存在学生表
create table student (
stu_id varchar(30) primary key,
name varchar(40) not null,
dept_id varchar(30)
);
3.1 删除表中全部信息

- 删除学生表中所有的学生的信息
delete from student;

3.2 删除指定学号的学生的信息

- 删除学生学号为XY001的学生的信息
delete from student
where stu_id = 'XY001';

4.插入新的元素
- 存在学生表
create table student (
stu_id varchar(30) primary key,
dept_id varchar(30)
);
4.1 将数据插入指定的属性列

insert into student (stu_id) values('XY001');
- 未赋值的属性列会默认赋值为NULL

4.2 给表中的每一属性赋值

insert into student values ('XY001','计算机工程与应用数学学院');
insert into student values ('XY002','土木工程学院');

5.表的结构的修改 alter

- 在school表中增加一列 location,类型为char(30)
alter table school add location char(30);

- 删除 school 表中的 location 属性列
alter table school drop location;

- 修改schoolname字段的数据类型为char(40)
alter table school modify schoolName char(40);

- 修改schoolname字段的数据类型为char(40)并添加not null约束
alter table school modify schoolName char(40) not null;

- 把字段location 重命名为address，同时将数据类型改为char(30);
alter table school change location address char(30);

6.表的数据的修改
- 存在学生表
create table student (
stu_id varchar(30) primary key,
name varchar(40) not null,
dept_id varchar(30)
);
6.1 更新整张表

- 把表中name属性字段上的姓名全部改为张三(不建议使用)
update student set name = '张三';

6.2 更新满足条件的元组
- 将id为XY001的人的姓名修改为张三
update student 
set name = '张三'
where stu_id = 'XY001';

- 将名字为张三的人的学院修改为计算机工程与应用数学学院
update student
set dept_id = '计算机工程与应用数学学院'
where name = '张三';

7.表的查询
7.1 表结构的显示

desc Tname;

7.2 查看当前数据库下所有的表

show tables;

7.3 查询全部列

select * 
from Tname;

7.4 查询特定列

select column1, column2 
from Tname;

7.5 使用where子句筛出符合条件的元组
- 存在学生表
create table student (
stu_id varchar(30) primary key,
name varchar(40) not null,
dept_id varchar(30)
);

- 选出所有在计算机工程与应用数学学院的学生的学号和姓名
select stu_id, name 
from student
where dept_id = '计算机工程与应用数学学院';